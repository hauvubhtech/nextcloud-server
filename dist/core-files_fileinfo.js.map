{"version":3,"file":"core-files_fileinfo.js?v=d5c54f8e5b3834c089a0","mappings":";CA0BA,SAAUA,GAUT,IAAMC,EAAW,SAASC,GACzB,IAAMC,EAAOC,KACbC,EAAEC,KAAKJ,GAAM,SAASK,EAAOC,GACvBH,EAAEI,WAAWF,KACjBJ,EAAKK,GAAOD,EAEb,IAEIF,EAAEK,YAAYN,KAAKO,MACvBP,KAAKO,GAAKC,SAASV,EAAKS,GAAI,KAI7BP,KAAKS,KAAOX,EAAKW,MAAQ,GAEP,QAAdT,KAAKU,KACRV,KAAKW,SAAW,uBAEhBX,KAAKW,SAAWX,KAAKW,UAAY,2BAG7BX,KAAKU,OACa,yBAAlBV,KAAKW,SACRX,KAAKU,KAAO,MAEZV,KAAKU,KAAO,OAGd,EAKDb,EAASe,UAAY,CAMpBL,GAAI,KAOJM,KAAM,KAQNJ,KAAM,KAONE,SAAU,KASVG,KAAM,KAQNJ,KAAM,KAQNK,YAAa,KAObC,MAAO,KAOPC,KAAM,KASNC,UAAW,KAKXC,YAAY,EAKZC,iBAAkB,KAKlBC,gBAAiB,GAEjBC,qBAAsB,EAEtBC,YAAa,WACZ,IAAK,IAAMC,KAAKxB,KAAKqB,gBAAiB,CACrC,IAAMI,EAAOzB,KAAKqB,gBAAgBG,GAClC,GAAmB,gBAAfC,EAAKC,OAAwC,aAAbD,EAAKrB,IACxC,OAAOqB,EAAKE,OAEb,CAED,OAAO,CACP,GAGG/B,EAAGgC,QACPhC,EAAGgC,MAAQ,CAAC,GAEbhC,EAAGgC,MAAM/B,SAAWA,CAzJrB,EA0JGD","sources":["webpack:///nextcloud/core\\src\\files\\fileinfo.js"],"sourcesContent":["/**\r\n * Copyright (c) 2015\r\n *\r\n * @author Julius HÃ¤rtl <jus@bitgrid.net>\r\n * @author Robin Appelman <robin@icewind.nl>\r\n * @author Roeland Jago Douma <roeland@famdouma.nl>\r\n * @author Vincent Petry <vincent@nextcloud.com>\r\n *\r\n * @license AGPL-3.0-or-later\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as\r\n * published by the Free Software Foundation, either version 3 of the\r\n * License, or (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n */\r\n\r\n/* eslint-disable */\r\n(function(OC) {\r\n\r\n\t/**\r\n\t * @class OC.Files.FileInfo\r\n\t * @classdesc File information\r\n\t *\r\n\t * @param {Object} data file data, see attributes for details\r\n\t *\r\n\t * @since 8.2\r\n\t */\r\n\tconst FileInfo = function(data) {\r\n\t\tconst self = this\r\n\t\t_.each(data, function(value, key) {\r\n\t\t\tif (!_.isFunction(value)) {\r\n\t\t\t\tself[key] = value\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!_.isUndefined(this.id)) {\r\n\t\t\tthis.id = parseInt(data.id, 10)\r\n\t\t}\r\n\r\n\t\t// TODO: normalize path\r\n\t\tthis.path = data.path || ''\r\n\r\n\t\tif (this.type === 'dir') {\r\n\t\t\tthis.mimetype = 'httpd/unix-directory'\r\n\t\t} else {\r\n\t\t\tthis.mimetype = this.mimetype || 'application/octet-stream'\r\n\t\t}\r\n\r\n\t\tif (!this.type) {\r\n\t\t\tif (this.mimetype === 'httpd/unix-directory') {\r\n\t\t\t\tthis.type = 'dir'\r\n\t\t\t} else {\r\n\t\t\t\tthis.type = 'file'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @memberof OC.Files\r\n\t */\r\n\tFileInfo.prototype = {\r\n\t\t/**\r\n\t\t * File id\r\n\t\t *\r\n\t\t * @type int\r\n\t\t */\r\n\t\tid: null,\r\n\r\n\t\t/**\r\n\t\t * File name\r\n\t\t *\r\n\t\t * @type String\r\n\t\t */\r\n\t\tname: null,\r\n\r\n\t\t/**\r\n\t\t * Path leading to the file, without the file name,\r\n\t\t * and with a leading slash.\r\n\t\t *\r\n\t\t * @type String\r\n\t\t */\r\n\t\tpath: null,\r\n\r\n\t\t/**\r\n\t\t * Mime type\r\n\t\t *\r\n\t\t * @type String\r\n\t\t */\r\n\t\tmimetype: null,\r\n\r\n\t\t/**\r\n\t\t * Icon URL.\r\n\t\t *\r\n\t\t * Can be used to override the mime type icon.\r\n\t\t *\r\n\t\t * @type String\r\n\t\t */\r\n\t\ticon: null,\r\n\r\n\t\t/**\r\n\t\t * File type. 'file'  for files, 'dir' for directories.\r\n\t\t *\r\n\t\t * @type String\r\n\t\t * @deprecated rely on mimetype instead\r\n\t\t */\r\n\t\ttype: null,\r\n\r\n\t\t/**\r\n\t\t * Permissions.\r\n\t\t *\r\n\t\t * @see OC#PERMISSION_ALL for permissions\r\n\t\t * @type int\r\n\t\t */\r\n\t\tpermissions: null,\r\n\r\n\t\t/**\r\n\t\t * Modification time\r\n\t\t *\r\n\t\t * @type int\r\n\t\t */\r\n\t\tmtime: null,\r\n\r\n\t\t/**\r\n\t\t * Etag\r\n\t\t *\r\n\t\t * @type String\r\n\t\t */\r\n\t\tetag: null,\r\n\r\n\t\t/**\r\n\t\t * Mount type.\r\n\t\t *\r\n\t\t * One of null, \"external-root\", \"shared\" or \"shared-root\"\r\n\t\t *\r\n\t\t * @type string\r\n\t\t */\r\n\t\tmountType: null,\r\n\r\n\t\t/**\r\n\t\t * @type boolean\r\n\t\t */\r\n\t\thasPreview: true,\r\n\r\n\t\t/**\r\n\t\t * @type int\r\n\t\t */\r\n\t\tsharePermissions: null,\r\n\r\n\t\t/**\r\n\t\t * @type Array\r\n\t\t */\r\n\t\tshareAttributes: [],\r\n\r\n\t\tquotaAvailableBytes: -1,\r\n\r\n\t\tcanDownload: function() {\r\n\t\t\tfor (const i in this.shareAttributes) {\r\n\t\t\t\tconst attr = this.shareAttributes[i]\r\n\t\t\t\tif (attr.scope === 'permissions' && attr.key === 'download') {\r\n\t\t\t\t\treturn attr.enabled\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true\r\n\t\t},\r\n\t}\r\n\r\n\tif (!OC.Files) {\r\n\t\tOC.Files = {}\r\n\t}\r\n\tOC.Files.FileInfo = FileInfo\r\n})(OC)\r\n"],"names":["OC","FileInfo","data","self","this","_","each","value","key","isFunction","isUndefined","id","parseInt","path","type","mimetype","prototype","name","icon","permissions","mtime","etag","mountType","hasPreview","sharePermissions","shareAttributes","quotaAvailableBytes","canDownload","i","attr","scope","enabled","Files"],"sourceRoot":""}